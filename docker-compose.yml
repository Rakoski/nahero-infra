version: '3.8'
services:
  nahero-primary:
    image: postgres:15
    container_name: nahero-primary
    environment:
      POSTGRES_DB: ${NAHERO_DB}
      POSTGRES_USER: ${NAHERO_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_INITDB_ARGS: "--wal-segsize=64"
    command: >
      postgres
        -c wal_level=replica
        -c max_wal_senders=10
        -c max_replication_slots=10
        -c hot_standby=on
    ports:
      - "5432:5432"
    volumes:
      - nahero_data_primary:/var/lib/postgresql/data
    networks:
      - nahero_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${NAHERO_DB_USER} -d ${NAHERO_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nahero-replica:
    image: postgres:15
    container_name: nahero-backup
    environment:
      POSTGRES_DB: nahero_db
      POSTGRES_USER: ${NAHERO_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      NAHERO_DB: ${NAHERO_DB}
      NAHERO_DB_USER: ${NAHERO_DB_USER}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_INITDB_WALDIR: /var/lib/postgresql/wal
    volumes:
      - nahero_data_replica:/var/lib/postgresql/data
      - ./backup-scripts:/scripts
    entrypoint: /bin/bash
    command: /scripts/manual-replica-setup.sh
    ports:
      - "5433:5432"
    networks:
      - nahero_network
    depends_on:
      nahero-primary:
        condition: service_healthy

  backup-service:
    image: postgres:15
    container_name: nahero-backup-service
    volumes:
      - ./backups:/backups
      - ./backup-scripts:/scripts
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      NAHERO_DB: ${NAHERO_DB}
      NAHERO_DB_USER: ${NAHERO_DB_USER}
      PGHOST: nahero-primary
    entrypoint: /bin/bash
    command: /scripts/backup.sh
    networks:
      - nahero_network
    depends_on:
      nahero-primary:
        condition: service_healthy

  backend:
    build:
      context: ../nahero-back
      dockerfile: Dockerfile
    container_name: nahero-back
    environment:
      NAHERO_DB: ${NAHERO_DB}
      NAHERO_DB_USER: ${NAHERO_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      NAHERO_JWT_TOKEN: ${NAHERO_JWT_TOKEN}
      NAHERO_DB_HOST: nahero-primary
    ports:
      - "8081:8081"
    networks:
      - nahero_network
    depends_on:
      nahero-primary:
        condition: service_healthy

  frontend:
    build:
      context: ../nahero-web
      dockerfile: Dockerfile
    container_name: nahero-web
    environment:
      - API_URL=http://backend:8081/api/v1/
    ports:
      - "4200:4200"
    networks:
      - nahero_network
    depends_on:
      - backend

volumes:
  nahero_data_primary:
  nahero_data_replica:
  
networks:
  nahero_network:
    driver: bridge